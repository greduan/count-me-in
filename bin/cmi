#!/usr/bin/env node

// outside stuff
var docopt = require('docopt').docopt;
var pathUtil = require('path');
var fsUtil = require('fs');

// inside stuff
var main = require('..');

var doc = 'Usage: cmi [-d DIR] [-r] NAME [(NUM | --set NUM)]' +
    '\n' +
    '\nOptions:' +
    '\n  -h --help     Show this screen.' +
    '\n  -v --version  Output software version.' +
    '\n  -r            NUM decreases the counter instead of increasing it.' +
    '\n  --set NUM     When used it sets the count to NUM.' +
    '\n  -d DIR        Directory where to store counter(s) relative to current directory. [default: .cmi]';

var cli = docopt(doc, { help: true, version: '0.4.0' });
//return console.log(cli);

// handle some default values for the CLI

var file = pathUtil.resolve(cli['-d'], cli['NAME']);
//return console.log(file);

// some util functions

function appendStrToFile(file, str, callback) {
    'use strict';

    fsUtil.appendFile(file, str, function (err) {
        if (err) throw err;
        else callback();
    });
}

function readFile(file, callback) {
    'use strict';

    fsUtil.readFile(file, { encoding: 'utf8' }, function (err, data) {
        if (err) {
            if (err.code === 'ENOENT') {
                console.log('FILE AND/OR DIRECTORY DOESN\'T EXIST\nThe file will be created but make sure the directory exists...');
                var firstLine = main.newLine(0);

                appendStrToFile(file, firstLine, function () {
                    if (err) throw err;
                    return console.log(firstLine);
                });
            } else throw err;
        }

        return callback(data);
    });
}

// the CLI logic

if (cli['--set']) {
    readFile(file, function (data) {
        'use strict';

        var newLine = main.newLine(cli['NUM']);

        appendStrToFile(file, newLine, function () {
            return console.log(newLine);
        });
    });
}

readFile(file, function (data) {
    'use strict';

    var lastNum = main.getLastNumber(data);
    var newNum = main.newNumber(lastNum, cli['NUM'], cli['-r']);
    var newLine = main.newLine(newNum);

    appendStrToFile(file, newLine, function () {
        return console.log(newLine);
    });
});

// vim: expandtab:
